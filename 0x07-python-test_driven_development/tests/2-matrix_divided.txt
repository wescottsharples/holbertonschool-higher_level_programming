>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> matrix_divided([[1, 2, "Holberton"]], 3)
Traceback (most recent call last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1, 2, 3], 3], 3)
Traceback (most recent call last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1, 2, 3]], 0)
Traceback (most recent call last):
	...
ZeroDivisionError: division by zero

>>> matrix_divided([[1, 2, 3]], "Holberton")
Traceback (most recent call last):
	...
TypeError: div must be a number

>>> matrix_divided([[float("NaN")]], 3)
[[nan]]

>>> matrix_divided([[float("inf")]], 3)
[[inf]]

>>> matrix_divided([[3]], float("NaN"))
[[nan]]

>>> matrix_divided()
Traceback (most recent call last):
	...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

>>> matrix_divided(3)
Traceback (most recent call last):
	...
TypeError: matrix_divided() missing 1 required positional argument: 'div'
